{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"cppsnippet": {
		"prefix": "snp",
		"body": [

"// AAA000 - Q
"// DIFF
"// rnd
"// SHOULD?
"
"
"// -----     cpp_snippets_v8.4.2     -----
"#include <iostream>
"#include <vector>
"#include <algorithm>
"#include <set>
"#include <unordered_set>
"#include <map>
"#include <string>
"#include <cmath>
"#include <ctime>
"#include <functional>
"#include <stack>
"#include <queue>
"#include <deque>
"#include <tuple>
"#include <cassert>
"#include <bitset>
"#include <iomanip>
"#include <sstream>
"
"#define rep(i,n)                for (int i = 0; i < n; i++)
"#define vrep(X)                 for (auto&& x : X)
"
"#define vvii(X,n1,n2)           vector<vector<int>> X(n1,vector<int>(n2))
"
"#define coutd(X)                cout << X << endl
"#define coutds(N,X)             cout << fixed << setprecision(N) << X << endl
"#define chmax(X1, X2)           X1 = max(X1, X2)
"#define chmin(X1, X2)           X1 = min(X1, X2)
"#define nextP(X)                next_permutation(X.begin(), X.end())
"
"#define INF                     8e18
"#define ll                      long long int
"
"
"using namespace std;
"
"int main() {
"    
"    
"    
"    
"    return 0;
"    
"}
]
	}
}